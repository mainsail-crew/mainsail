name: Release

on:
  workflow_dispatch:

jobs:
  update-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_next_version.outputs.version }}
      hasNextVersion: ${{ steps.get_next_version.outputs.hasNextVersion }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: 'develop'
          fetch-depth: 0

      - name: Get next version
        id: get_next_version
        uses: thenativeweb/get-next-version@main

      - name: Show the next version
        run: |
          echo ${{ steps.get_next_version.outputs.version }}
          echo ${{ steps.get_next_version.outputs.hasNextVersion }}

  push-version-number:
    needs: ['update-version']
    runs-on: ubuntu-latest
    if: needs.update-version.outputs.hasNextVersion
    steps:
      - name: Checkout develop repo
        uses: actions/checkout@v3
        with:
          ref: 'develop'

      - name: Commit version number
        shell: bash
        run: |
          npm version ${{ needs.update-version.outputs.version }} --no-git-tag-version version -m "chore: push version number to v%s"

  update-master-branch:
    needs: ['update-version-number']
    runs-on: ubuntu-latest
    if: needs.update-version.outputs.hasNextVersion
    steps:
      - name: Merge develop -> master
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: 'develop'
          target_branch: 'master'
          github_token: ${{ github.token }}
#
#  release:
#    needs: [merge-master]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Fetch repo
#        uses: actions/checkout@v3
#        with:
#          ref: 'master'
#
#      - name: Install node
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Build
#        run: npm run build
#
#      - name: Copy output
#        run: cp ${{ github.workspace }}/dist/mainsail.zip mainsail.zip
#
#      - name: Set variables
#        run: |
#          VER=$(cat dist/.version)
#          echo "version=$VER" >> $GITHUB_ENV
#
#      - uses: MeilCli/bump-release-action@v1
#        with:
#          config_path: '.github/bump.yml'
#          bump: ${{ env.version }}
#          dry_run: ${{ github.event.inputs.dry_run }}
#          draft: ${{ github.event.inputs.draft }}
#          pre_release: ${{ github.event.inputs.pre_release }}
