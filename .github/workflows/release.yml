name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: New version number in X.Y.Z
        required: true

jobs:
  push-version-number:
    runs-on: ubuntu-latest
    steps:
      - name: Clone develop repository
        uses: actions/checkout@v3
        with:
          ref: 'develop'

      - name: setup git config
        shell: bash
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Change version
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{ github.event.inputs.version }}
          git-tag-version: 'true'
      #      - name: Push version number
      #        shell: bash
      #        run: |
      #          npm version ${{ github.event.inputs.version }} -m 'chore: push version number to v%s'

      #      - name: Add & Commit
      #        uses: EndBug/add-and-commit@v9
      #        with:
      #          add: 'package.json package-lock.json'
      #          default_author: github_actions
      #          message:
      #
  #      - name: git push
  #        shell: bash
  #        run: |
  #          git push && git push --tags

  update-master-branch:
    needs: ['push-version-number']
    runs-on: ubuntu-latest
    steps:
      - uses: everlytic/branch-merge@1.1.5
        with:
          github_token: ${{ github.token }}
          source_ref: 'develop'
          target_branch: 'master'
          commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'

  release:
    needs: ['update-master-branch']
    runs-on: ubuntu-latest
    steps:
      - name: Fetch repo
        uses: actions/checkout@v3
        with:
          ref: 'master'
          fetch-depth: 0

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: generate-changelog
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      - name: Set the release body
        id: release-body
        shell: bash
        run: |
          r=$(cat ${{ steps.generate-changelog.outputs.RELEASE_BODY }})
          r="${r//'%'/'%25'}"     # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"   # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"   # Multiline escape sequences for '\r'
          echo 'RELEASE_BODY<<EOF' >> $GITHUB_ENV
          echo "$r" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Show result
        shell: bash
        env:
          CHANGELOG: ${{ steps.generate-changelog.outputs.changelog }}
        run: |
          echo "$CHANGELOG"

      - name: Create release and upload build
        uses: softprops/action-gh-release@v1
        id: create-release
        with:
          name: v${{ github.event.inputs.version }}
          tag_name: v${{ github.event.inputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./dist/mainsail.zip
          body: ${{ steps.generate-changelog.outputs.changelog }}
